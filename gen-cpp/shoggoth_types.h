/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef shoggoth_TYPES_H
#define shoggoth_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <thrift/cxxfunctional.h>




struct PointMode {
  enum type {
    MANUAL = 0,
    AUTOMATIC = 1
  };
};

extern const std::map<int, const char*> _PointMode_VALUES_TO_NAMES;

struct LightStatus {
  enum type {
    OVERHEAT = 0,
    ON = 1,
    OFF = 2
  };
};

extern const std::map<int, const char*> _LightStatus_VALUES_TO_NAMES;

struct MoveStatus {
  enum type {
    RUNNING = 0,
    UNCAL = 1,
    CALLING = 2,
    SLEEPING = 3,
    TILT_OVERCUR = 4,
    TILT_FAULT = 5,
    PAN_OVERCUR = 6,
    PAN_FAULT = 7
  };
};

extern const std::map<int, const char*> _MoveStatus_VALUES_TO_NAMES;

typedef struct _Coordinates__isset {
  _Coordinates__isset() : x(false), y(false) {}
  bool x;
  bool y;
} _Coordinates__isset;

class Coordinates {
 public:

  static const char* ascii_fingerprint; // = "C88FB7958D86460D03E699333A272947";
  static const uint8_t binary_fingerprint[16]; // = {0xC8,0x8F,0xB7,0x95,0x8D,0x86,0x46,0x0D,0x03,0xE6,0x99,0x33,0x3A,0x27,0x29,0x47};

  Coordinates() : x(0), y(0) {
  }

  virtual ~Coordinates() throw() {}

  int16_t x;
  int16_t y;

  _Coordinates__isset __isset;

  void __set_x(const int16_t val) {
    x = val;
  }

  void __set_y(const int16_t val) {
    y = val;
  }

  bool operator == (const Coordinates & rhs) const
  {
    if (!(x == rhs.x))
      return false;
    if (!(y == rhs.y))
      return false;
    return true;
  }
  bool operator != (const Coordinates &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const Coordinates & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(Coordinates &a, Coordinates &b);



#endif
